#include <algorithm>
#include <array>
#include <iostream>
#include <string>
#include <type_traits>
// #include "basic.hpp"
#include "basic_IO.hpp"
#include "basic_arithmetic_array_operations.hpp"
#include "basic_linear_systems.hpp"
#include "lib_measurement.hpp"

// /Users/tomoaki/Library/CloudStorage/Dropbox/code/cpp/builds/build_array/array演算が正しく行われているか.nb

int main() {
   auto w = std::setw(30);
   auto rand = 0.568350126626343;
   auto irand = 8;
   std::array<std::array<double, 3>, 3> a{{{0.600508325364073, 0.125869068854380, 0.769252075698531}, {0.016169971341762, 0.586374074796964, 0.109804311869231}, {0.084380423169443, 0.752934902540115, 0.514543650223694}}};
   std::array<std::array<double, 3>, 3> b{{{0.588660906715929, 0.365261585225016, 0.793105436738703}, {0.805701891040414, 0.387706577211930, 0.284248769440630}, {0.284499533657188, 0.404747144950617, 0.493555944252848}}};
   std::array<std::array<double, 2>, 2> c{{{0.797793280975115, 0.881896464136682}, {0.740711898090474, 0.686560864268646}}};
   std::array<double, 3> row = {0.265913744124591, 0.833717501840282, 0.318926101575874};
   std::array<double, 3> U = {0.250696905904222, 0.413963284507430, 0.592669584988633};
   std::array<double, 3> V = {0.690728830633440, 0.582746492286805, 0.105075054445301};
   std::array<double, 3> W = {0.795132872740390, 0.835166487023307, 0.601240059405092};
   std::array<double, 4> X = {0.213091098273455, 0.633664037319153, 0.361258164785357, 0.908863672265407};
   std::array<double, 4> Y = {0.725526493418149, 0.077372702678798, 0.345725856537546, 0.389716777656131};
   std::array<double, 4> Z = {0.823462778106918, 0.933848857219493, 0.470938037183077, 0.790083163133662};
   std::array<double, 2> y = {0.292562815831070, 0.762505214371428};
   std::cout << w << "Eigenvalues(a) = " << (Eigenvalues(a)) << std::endl;
   std::cout << w << std::array<double, 3>{{0.976837751195725, 0.523096988679899, 0.201491310509107}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Eigenvalues(a)) - std::array<double, 3>{{0.976837751195725, 0.523096988679899, 0.201491310509107}}) << colorReset << std::endl;
   std::cout << w << "Inverse(a) = " << (Inverse(a)) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{2.127460854561290, 4.996508919438960, -4.246854277642170}, {0.009180212418351, 2.370650518192530, -0.519624615277049}, {-0.362317462174037, -4.288369029342480, 3.400284639382590}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Inverse(a)) - std::array<std::array<double, 3>, 3>{{{2.127460854561290, 4.996508919438960, -4.246854277642170}, {0.009180212418351, 2.370650518192530, -0.519624615277049}, {-0.362317462174037, -4.288369029342480, 3.400284639382590}}}) << colorReset << std::endl;
   std::cout << "Vector Operation" << std::endl;
   std::cout << w << "Dot(U,V) = " << (Dot(U, V)) << std::endl;
   std::cout << w << 0.476674021551629 << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(U, V)) - 0.476674021551629) << colorReset << std::endl;
   std::cout << w << "Cross(U,V) = " << (Cross(U, V)) << std::endl;
   std::cout << w << std::array<double, 3>{{-0.301878907079228, 0.383031978354050, -0.139843632890154}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Cross(U, V)) - std::array<double, 3>{{-0.301878907079228, 0.383031978354050, -0.139843632890154}}) << colorReset << std::endl;
   std::cout << w << "Det(a) = " << (Det(a)) << std::endl;
   std::cout << w << 0.102958208381229 << std::endl;
   std::cout << w << Red << "Error = " << Norm((Det(a)) - 0.102958208381229) << colorReset << std::endl;
   std::cout << "Arithmetic Operation" << std::endl;
   std::cout << w << "rand = " << (rand) << std::endl;
   std::cout << w << 0.568350126626343 << std::endl;
   std::cout << w << Red << "Error = " << Norm((rand)-0.568350126626343) << colorReset << std::endl;
   std::cout << w << "irand = " << (irand) << std::endl;
   std::cout << w << 8 << std::endl;
   std::cout << w << Red << "Error = " << Norm((irand)-8) << colorReset << std::endl;
   std::cout << w << "a = " << (a) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.600508325364073, 0.125869068854380, 0.769252075698531}, {0.016169971341762, 0.586374074796964, 0.109804311869231}, {0.084380423169443, 0.752934902540115, 0.514543650223694}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a)-std::array<std::array<double, 3>, 3>{{{0.600508325364073, 0.125869068854380, 0.769252075698531}, {0.016169971341762, 0.586374074796964, 0.109804311869231}, {0.084380423169443, 0.752934902540115, 0.514543650223694}}}) << colorReset << std::endl;
   std::cout << w << "b = " << (b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.588660906715929, 0.365261585225016, 0.793105436738703}, {0.805701891040414, 0.387706577211930, 0.284248769440630}, {0.284499533657188, 0.404747144950617, 0.493555944252848}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((b)-std::array<std::array<double, 3>, 3>{{{0.588660906715929, 0.365261585225016, 0.793105436738703}, {0.805701891040414, 0.387706577211930, 0.284248769440630}, {0.284499533657188, 0.404747144950617, 0.493555944252848}}}) << colorReset << std::endl;
   std::cout << w << "a/irand = " << (a / irand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.075063540670509, 0.015733633606798, 0.096156509462316}, {0.002021246417720, 0.073296759349621, 0.013725538983654}, {0.010547552896180, 0.094116862817514, 0.064317956277962}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a / irand) - std::array<std::array<double, 3>, 3>{{{0.075063540670509, 0.015733633606798, 0.096156509462316}, {0.002021246417720, 0.073296759349621, 0.013725538983654}, {0.010547552896180, 0.094116862817514, 0.064317956277962}}}) << colorReset << std::endl;
   std::cout << w << "row = " << (row) << std::endl;
   std::cout << w << std::array<double, 3>{{0.265913744124591, 0.833717501840282, 0.318926101575874}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row)-std::array<double, 3>{{0.265913744124591, 0.833717501840282, 0.318926101575874}}) << colorReset << std::endl;
   std::cout << w << "row/irand = " << (row / irand) << std::endl;
   std::cout << w << std::array<double, 3>{{0.033239218015574, 0.104214687730035, 0.039865762696984}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row / irand) - std::array<double, 3>{{0.033239218015574, 0.104214687730035, 0.039865762696984}}) << colorReset << std::endl;
   std::cout << "negate" << std::endl;
   std::cout << w << "-a = " << (-a) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{-0.600508325364073, -0.125869068854380, -0.769252075698531}, {-0.016169971341762, -0.586374074796964, -0.109804311869231}, {-0.084380423169443, -0.752934902540115, -0.514543650223694}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((-a) - std::array<std::array<double, 3>, 3>{{{-0.600508325364073, -0.125869068854380, -0.769252075698531}, {-0.016169971341762, -0.586374074796964, -0.109804311869231}, {-0.084380423169443, -0.752934902540115, -0.514543650223694}}}) << colorReset << std::endl;
   std::cout << w << "-b = " << (-b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{-0.588660906715929, -0.365261585225016, -0.793105436738703}, {-0.805701891040414, -0.387706577211930, -0.284248769440630}, {-0.284499533657188, -0.404747144950617, -0.493555944252848}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((-b) - std::array<std::array<double, 3>, 3>{{{-0.588660906715929, -0.365261585225016, -0.793105436738703}, {-0.805701891040414, -0.387706577211930, -0.284248769440630}, {-0.284499533657188, -0.404747144950617, -0.493555944252848}}}) << colorReset << std::endl;
   std::cout << "+" << std::endl;
   std::cout << w << "a+b = " << (a + b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{1.189169232080000, 0.491130654079396, 1.562357512437230}, {0.821871862382175, 0.974080652008895, 0.394053081309861}, {0.368879956826631, 1.157682047490730, 1.008099594476540}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a + b) - std::array<std::array<double, 3>, 3>{{{1.189169232080000, 0.491130654079396, 1.562357512437230}, {0.821871862382175, 0.974080652008895, 0.394053081309861}, {0.368879956826631, 1.157682047490730, 1.008099594476540}}}) << colorReset << std::endl;
   std::cout << w << "a-b = " << (a - b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.011847418648144, -0.239392516370635, -0.023853361040172}, {-0.789531919698652, 0.198667497585034, -0.174444457571400}, {-0.200119110487745, 0.348187757589498, 0.020987705970846}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a - b) - std::array<std::array<double, 3>, 3>{{{0.011847418648144, -0.239392516370635, -0.023853361040172}, {-0.789531919698652, 0.198667497585034, -0.174444457571400}, {-0.200119110487745, 0.348187757589498, 0.020987705970846}}}) << colorReset << std::endl;
   std::cout << w << "a+row = " << (a + row) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.866422069488663, 0.391782812978971, 1.035165819823120}, {0.849887473182043, 1.420091576637250, 0.943521813709513}, {0.403306524745316, 1.071861004115990, 0.833469751799568}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a + row) - std::array<std::array<double, 3>, 3>{{{0.866422069488663, 0.391782812978971, 1.035165819823120}, {0.849887473182043, 1.420091576637250, 0.943521813709513}, {0.403306524745316, 1.071861004115990, 0.833469751799568}}}) << colorReset << std::endl;
   std::cout << w << "row+a = " << (row + a) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.866422069488663, 0.391782812978971, 1.035165819823120}, {0.849887473182043, 1.420091576637250, 0.943521813709513}, {0.403306524745316, 1.071861004115990, 0.833469751799568}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row + a) - std::array<std::array<double, 3>, 3>{{{0.866422069488663, 0.391782812978971, 1.035165819823120}, {0.849887473182043, 1.420091576637250, 0.943521813709513}, {0.403306524745316, 1.071861004115990, 0.833469751799568}}}) << colorReset << std::endl;
   std::cout << w << "a+irand = " << (a + irand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{8.600508325364070, 8.125869068854380, 8.769252075698530}, {8.016169971341760, 8.586374074796960, 8.109804311869230}, {8.084380423169440, 8.752934902540120, 8.514543650223700}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a + irand) - std::array<std::array<double, 3>, 3>{{{8.600508325364070, 8.125869068854380, 8.769252075698530}, {8.016169971341760, 8.586374074796960, 8.109804311869230}, {8.084380423169440, 8.752934902540120, 8.514543650223700}}}) << colorReset << std::endl;
   std::cout << w << "row+irand = " << (row + irand) << std::endl;
   std::cout << w << std::array<double, 3>{{8.265913744124590, 8.833717501840280, 8.318926101575870}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row + irand) - std::array<double, 3>{{8.265913744124590, 8.833717501840280, 8.318926101575870}}) << colorReset << std::endl;
   std::cout << "-" << std::endl;
   std::cout << w << "a-row = " << (a - row) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.334594581239482, -0.140044675270210, 0.503338331573940}, {-0.817547530498520, -0.247343427043317, -0.723913189971051}, {-0.234545678406431, 0.434008800964242, 0.195617548647821}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a - row) - std::array<std::array<double, 3>, 3>{{{0.334594581239482, -0.140044675270210, 0.503338331573940}, {-0.817547530498520, -0.247343427043317, -0.723913189971051}, {-0.234545678406431, 0.434008800964242, 0.195617548647821}}}) << colorReset << std::endl;
   std::cout << w << "row-a = " << (row - a) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{-0.334594581239482, 0.140044675270210, -0.503338331573940}, {0.817547530498520, 0.247343427043317, 0.723913189971051}, {0.234545678406431, -0.434008800964242, -0.195617548647821}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row - a) - std::array<std::array<double, 3>, 3>{{{-0.334594581239482, 0.140044675270210, -0.503338331573940}, {0.817547530498520, 0.247343427043317, 0.723913189971051}, {0.234545678406431, -0.434008800964242, -0.195617548647821}}}) << colorReset << std::endl;
   std::cout << w << "a+rand = " << (a + rand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{1.168858451990420, 0.694219195480723, 1.337602202324870}, {0.584520097968104, 1.154724201423310, 0.678154438495574}, {0.652730549795785, 1.321285029166460, 1.082893776850040}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a + rand) - std::array<std::array<double, 3>, 3>{{{1.168858451990420, 0.694219195480723, 1.337602202324870}, {0.584520097968104, 1.154724201423310, 0.678154438495574}, {0.652730549795785, 1.321285029166460, 1.082893776850040}}}) << colorReset << std::endl;
   std::cout << w << "rand+a = " << (rand + a) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{1.168858451990420, 0.694219195480723, 1.337602202324870}, {0.584520097968104, 1.154724201423310, 0.678154438495574}, {0.652730549795785, 1.321285029166460, 1.082893776850040}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((rand + a) - std::array<std::array<double, 3>, 3>{{{1.168858451990420, 0.694219195480723, 1.337602202324870}, {0.584520097968104, 1.154724201423310, 0.678154438495574}, {0.652730549795785, 1.321285029166460, 1.082893776850040}}}) << colorReset << std::endl;
   std::cout << w << "a+irand = " << (a + irand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{8.600508325364070, 8.125869068854380, 8.769252075698530}, {8.016169971341760, 8.586374074796960, 8.109804311869230}, {8.084380423169440, 8.752934902540120, 8.514543650223700}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a + irand) - std::array<std::array<double, 3>, 3>{{{8.600508325364070, 8.125869068854380, 8.769252075698530}, {8.016169971341760, 8.586374074796960, 8.109804311869230}, {8.084380423169440, 8.752934902540120, 8.514543650223700}}}) << colorReset << std::endl;
   std::cout << w << "row+irand = " << (row + irand) << std::endl;
   std::cout << w << std::array<double, 3>{{8.265913744124590, 8.833717501840280, 8.318926101575870}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row + irand) - std::array<double, 3>{{8.265913744124590, 8.833717501840280, 8.318926101575870}}) << colorReset << std::endl;
   std::cout << "*" << std::endl;
   std::cout << w << "row*rand = " << (row * rand) << std::endl;
   std::cout << w << std::array<double, 3>{{0.151132110144896, 0.473843447741522, 0.181261690215094}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row * rand) - std::array<double, 3>{{0.151132110144896, 0.473843447741522, 0.181261690215094}}) << colorReset << std::endl;
   std::cout << w << "rand*row = " << (rand * row) << std::endl;
   std::cout << w << std::array<double, 3>{{0.151132110144896, 0.473843447741522, 0.181261690215094}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((rand * row) - std::array<double, 3>{{0.151132110144896, 0.473843447741522, 0.181261690215094}}) << colorReset << std::endl;
   std::cout << w << "a*rand = " << (a * rand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.341298982760844, 0.071537701221727, 0.437204514630837}, {0.009190205259635, 0.333265779661259, 0.062407294554996}, {0.047957624193137, 0.427930647200068, 0.292440948759417}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a * rand) - std::array<std::array<double, 3>, 3>{{{0.341298982760844, 0.071537701221727, 0.437204514630837}, {0.009190205259635, 0.333265779661259, 0.062407294554996}, {0.047957624193137, 0.427930647200068, 0.292440948759417}}}) << colorReset << std::endl;
   std::cout << w << "rand*a = " << (rand * a) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.341298982760844, 0.071537701221727, 0.437204514630837}, {0.009190205259635, 0.333265779661259, 0.062407294554996}, {0.047957624193137, 0.427930647200068, 0.292440948759417}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((rand * a) - std::array<std::array<double, 3>, 3>{{{0.341298982760844, 0.071537701221727, 0.437204514630837}, {0.009190205259635, 0.333265779661259, 0.062407294554996}, {0.047957624193137, 0.427930647200068, 0.292440948759417}}}) << colorReset << std::endl;
   std::cout << w << "a*irand = " << (a * irand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{4.804066602912580, 1.006952550835040, 6.154016605588250}, {0.129359770734094, 4.690992598375720, 0.878434494953847}, {0.675043385355542, 6.023479220320920, 4.116349201789560}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a * irand) - std::array<std::array<double, 3>, 3>{{{4.804066602912580, 1.006952550835040, 6.154016605588250}, {0.129359770734094, 4.690992598375720, 0.878434494953847}, {0.675043385355542, 6.023479220320920, 4.116349201789560}}}) << colorReset << std::endl;
   std::cout << w << "row*irand = " << (row * irand) << std::endl;
   std::cout << w << std::array<double, 3>{{2.127309952996720, 6.669740014722250, 2.551408812606990}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row * irand) - std::array<double, 3>{{2.127309952996720, 6.669740014722250, 2.551408812606990}}) << colorReset << std::endl;
   std::cout << "/" << std::endl;
   std::cout << w << "row/rand = " << (row / rand) << std::endl;
   std::cout << w << std::array<double, 3>{{0.467869595988343, 1.466908271471900, 0.561143715176031}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row / rand) - std::array<double, 3>{{0.467869595988343, 1.466908271471900, 0.561143715176031}}) << colorReset << std::endl;
   std::cout << w << "rand/row = " << (rand / row) << std::endl;
   std::cout << w << std::array<double, 3>{{2.137347689557740, 0.681705884033635, 1.782074668137910}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((rand / row) - std::array<double, 3>{{2.137347689557740, 0.681705884033635, 1.782074668137910}}) << colorReset << std::endl;
   std::cout << w << "a/rand = " << (a / rand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{1.056581668994460, 0.221463958496014, 1.353482720703730}, {0.028450721807251, 1.031712754737310, 0.193198359118904}, {0.148465565883331, 1.324773000420440, 0.905328645350997}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a / rand) - std::array<std::array<double, 3>, 3>{{{1.056581668994460, 0.221463958496014, 1.353482720703730}, {0.028450721807251, 1.031712754737310, 0.193198359118904}, {0.148465565883331, 1.324773000420440, 0.905328645350997}}}) << colorReset << std::endl;
   std::cout << w << "rand/a = " << (rand / a) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.946448371522188, 4.515407413427950, 0.738834700069212}, {35.148493130502900, 0.969262030936715, 5.176027397751080}, {6.735568574775330, 0.754846301730662, 1.104571257228140}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((rand / a) - std::array<std::array<double, 3>, 3>{{{0.946448371522188, 4.515407413427950, 0.738834700069212}, {35.148493130502900, 0.969262030936715, 5.176027397751080}, {6.735568574775330, 0.754846301730662, 1.104571257228140}}}) << colorReset << std::endl;
   std::cout << w << "a/irand = " << (a / irand) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.075063540670509, 0.015733633606798, 0.096156509462316}, {0.002021246417720, 0.073296759349621, 0.013725538983654}, {0.010547552896180, 0.094116862817514, 0.064317956277962}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a / irand) - std::array<std::array<double, 3>, 3>{{{0.075063540670509, 0.015733633606798, 0.096156509462316}, {0.002021246417720, 0.073296759349621, 0.013725538983654}, {0.010547552896180, 0.094116862817514, 0.064317956277962}}}) << colorReset << std::endl;
   std::cout << w << "row/irand = " << (row / irand) << std::endl;
   std::cout << w << std::array<double, 3>{{0.033239218015574, 0.104214687730035, 0.039865762696984}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((row / irand) - std::array<double, 3>{{0.033239218015574, 0.104214687730035, 0.039865762696984}}) << colorReset << std::endl;
   std::cout << "+=, -=, *=, /=" << std::endl;
   std::cout << w << "a+=b = " << (a += b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{1.189169232080000, 0.491130654079396, 1.562357512437230}, {0.821871862382175, 0.974080652008895, 0.394053081309861}, {0.368879956826631, 1.157682047490730, 1.008099594476540}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a += b) - std::array<std::array<double, 3>, 3>{{{1.189169232080000, 0.491130654079396, 1.562357512437230}, {0.821871862382175, 0.974080652008895, 0.394053081309861}, {0.368879956826631, 1.157682047490730, 1.008099594476540}}}) << colorReset << std::endl;
   std::cout << w << "a-=b = " << (a -= b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{1.189169232080000, 0.491130654079396, 1.562357512437230}, {0.821871862382175, 0.974080652008895, 0.394053081309861}, {0.368879956826631, 1.157682047490730, 1.008099594476540}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a -= b) - std::array<std::array<double, 3>, 3>{{{1.189169232080000, 0.491130654079396, 1.562357512437230}, {0.821871862382175, 0.974080652008895, 0.394053081309861}, {0.368879956826631, 1.157682047490730, 1.008099594476540}}}) << colorReset << std::endl;
   std::cout << w << "a*=b = " << (a *= b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.353495775299279, 0.045975135620548, 0.610098003459037}, {0.013028176488127, 0.227341085505344, 0.031211740528104}, {0.024006191041503, 0.304748252136783, 0.253956077145463}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a *= b) - std::array<std::array<double, 3>, 3>{{{0.353495775299279, 0.045975135620548, 0.610098003459037}, {0.013028176488127, 0.227341085505344, 0.031211740528104}, {0.024006191041503, 0.304748252136783, 0.253956077145463}}}) << colorReset << std::endl;
   std::cout << w << "a*=row = " << (a *= row) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.055333763288463, 0.004465476453425, 0.128668226760789}, {0.008751387911215, 0.073485223007415, 0.007396657335142}, {0.002178185592052, 0.039338254135044, 0.039974685992263}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a *= row) - std::array<std::array<double, 3>, 3>{{{0.055333763288463, 0.004465476453425, 0.128668226760789}, {0.008751387911215, 0.073485223007415, 0.007396657335142}, {0.002178185592052, 0.039338254135044, 0.039974685992263}}}) << colorReset << std::endl;
   std::cout << w << "a/=b = " << (a /= b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.024995728448534, 0.003250907325223, 0.043140102618040}, {0.009055688398040, 0.158021349517701, 0.021694808697178}, {0.002441762313111, 0.030997120524769, 0.025830852436661}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a /= b) - std::array<std::array<double, 3>, 3>{{{0.024995728448534, 0.003250907325223, 0.043140102618040}, {0.009055688398040, 0.158021349517701, 0.021694808697178}, {0.002441762313111, 0.030997120524769, 0.025830852436661}}}) << colorReset << std::endl;
   std::cout << w << "a/=row = " << (a /= row) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{0.159683417175548, 0.033470315368544, 0.204554699624609}, {0.013481188111883, 0.488870328783632, 0.091545776582906}, {0.026911119410753, 0.240130593207529, 0.164101400456463}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a /= row) - std::array<std::array<double, 3>, 3>{{{0.159683417175548, 0.033470315368544, 0.204554699624609}, {0.013481188111883, 0.488870328783632, 0.091545776582906}, {0.026911119410753, 0.240130593207529, 0.164101400456463}}}) << colorReset << std::endl;
   std::cout << w << "a/=b = " << (a /= b) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{1.020126049671350, 0.344599799009360, 0.969924098442373}, {0.020069422104597, 1.512417145496190, 0.386296524995740}, {0.296592483245045, 1.860259947311010, 1.042523459022700}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a /= b) - std::array<std::array<double, 3>, 3>{{{1.020126049671350, 0.344599799009360, 0.969924098442373}, {0.020069422104597, 1.512417145496190, 0.386296524995740}, {0.296592483245045, 1.860259947311010, 1.042523459022700}}}) << colorReset << std::endl;
   std::cout << w << "a/=row = " << (a /= row) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 3>{{{6.517002050839220, 3.547890725549990, 4.599027831996440}, {0.029877314986611, 4.678961858213350, 1.630058871024400}, {3.268801262957250, 14.411187784718500, 6.623070611155490}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((a /= row) - std::array<std::array<double, 3>, 3>{{{6.517002050839220, 3.547890725549990, 4.599027831996440}, {0.029877314986611, 4.678961858213350, 1.630058871024400}, {3.268801262957250, 14.411187784718500, 6.623070611155490}}}) << colorReset << std::endl;
   std::cout << "Tensor Operation" << std::endl;
   std::cout << w << "TensorProduct(U,X) = " << (TensorProduct(U, X)) << std::endl;
   std::cout << w << std::array<std::array<double, 4>, 3>{{{0.053421279012888, 0.158857613538689, 0.090566304144327, 0.227849310525687}, {0.088211890940575, 0.262313646162875, 0.149547616449673, 0.376236190940472}, {0.126292612778501, 0.375553402020164, 0.214106726597093, 0.538655855452784}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((TensorProduct(U, X)) - std::array<std::array<double, 4>, 3>{{{0.053421279012888, 0.158857613538689, 0.090566304144327, 0.227849310525687}, {0.088211890940575, 0.262313646162875, 0.149547616449673, 0.376236190940472}, {0.126292612778501, 0.375553402020164, 0.214106726597093, 0.538655855452784}}}) << colorReset << std::endl;
   std::cout << w << "Dot(W,TensorProduct(TensorProduct(U,X),V)) = " << (Dot(W, TensorProduct(TensorProduct(U, X), V))) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 4>{{{0.132675751984604, 0.111934417171552, 0.020182901371829}, {0.394534794452235, 0.332856770060243, 0.060017423870402}, {0.224928207052400, 0.189764952414020, 0.034216529778612}, {0.565880846953814, 0.477416120465402, 0.086082928880638}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(W, TensorProduct(TensorProduct(U, X), V))) - std::array<std::array<double, 3>, 4>{{{0.132675751984604, 0.111934417171552, 0.020182901371829}, {0.394534794452235, 0.332856770060243, 0.060017423870402}, {0.224928207052400, 0.189764952414020, 0.034216529778612}, {0.565880846953814, 0.477416120465402, 0.086082928880638}}}) << colorReset << std::endl;
   std::cout << w << "Dot(Z,Dot(W,TensorProduct(TensorProduct(TensorProduct(U,X),V),Y))) = " << (Dot(Z, Dot(W, TensorProduct(TensorProduct(TensorProduct(U, X), V), Y)))) << std::endl;
   std::cout << w << std::array<std::array<double, 4>, 3>{{{0.747807113189273, 0.079748786508527, 0.356342955188579, 0.401684819375015}, {0.630901669065314, 0.067281577865158, 0.300635499747164, 0.338889024338223}, {0.113757917214614, 0.012131545278985, 0.054207604717038, 0.061105099995572}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(Z, Dot(W, TensorProduct(TensorProduct(TensorProduct(U, X), V), Y)))) - std::array<std::array<double, 4>, 3>{{{0.747807113189273, 0.079748786508527, 0.356342955188579, 0.401684819375015}, {0.630901669065314, 0.067281577865158, 0.300635499747164, 0.338889024338223}, {0.113757917214614, 0.012131545278985, 0.054207604717038, 0.061105099995572}}}) << colorReset << std::endl;
   std::cout << w << "Dot(Y,Dot(U,Dot(Z,Dot(W,TensorProduct(TensorProduct(TensorProduct(TensorProduct(U,X),V),Y),Z))))) = " << (Dot(Y, Dot(U, Dot(Z, Dot(W, TensorProduct(TensorProduct(TensorProduct(TensorProduct(U, X), V), Y), Z)))))) << std::endl;
   std::cout << w << std::array<double, 4>{{0.470794951395257, 0.533905525585376, 0.269247446539711, 0.451710962869323}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(Y, Dot(U, Dot(Z, Dot(W, TensorProduct(TensorProduct(TensorProduct(TensorProduct(U, X), V), Y), Z)))))) - std::array<double, 4>{{0.470794951395257, 0.533905525585376, 0.269247446539711, 0.451710962869323}}) << colorReset << std::endl;
   std::cout << w << "Dot(W,10*TensorProduct(TensorProduct(U,X),V)) = " << (Dot(W, 10 * TensorProduct(TensorProduct(U, X), V))) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 4>{{{1.326757519846040, 1.119344171715520, 0.201829013718289}, {3.945347944522350, 3.328567700602430, 0.600174238704018}, {2.249282070524000, 1.897649524140200, 0.342165297786119}, {5.658808469538140, 4.774161204654020, 0.860829288806384}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(W, 10 * TensorProduct(TensorProduct(U, X), V))) - std::array<std::array<double, 3>, 4>{{{1.326757519846040, 1.119344171715520, 0.201829013718289}, {3.945347944522350, 3.328567700602430, 0.600174238704018}, {2.249282070524000, 1.897649524140200, 0.342165297786119}, {5.658808469538140, 4.774161204654020, 0.860829288806384}}}) << colorReset << std::endl;
   std::cout << w << "Dot(W,Dot(TensorProduct(TensorProduct(TensorProduct(U,X),V),Y),Z)) = " << (Dot(W, Dot(TensorProduct(TensorProduct(TensorProduct(U, X), V), Y), Z))) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 4>{{{0.151306425044799, 0.127652538224665, 0.023017036707337}, {0.449936393134443, 0.379597380654896, 0.068445226127550}, {0.256513209020926, 0.216412239004259, 0.039021303597672}, {0.645343302548915, 0.544456129819110, 0.098170916927055}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(W, Dot(TensorProduct(TensorProduct(TensorProduct(U, X), V), Y), Z))) - std::array<std::array<double, 3>, 4>{{{0.151306425044799, 0.127652538224665, 0.023017036707337}, {0.449936393134443, 0.379597380654896, 0.068445226127550}, {0.256513209020926, 0.216412239004259, 0.039021303597672}, {0.645343302548915, 0.544456129819110, 0.098170916927055}}}) << colorReset << std::endl;
   std::cout << w << "Dot(W,Dot(TensorProduct(TensorProduct(TensorProduct(U,Y),W),Z)+TensorProduct(TensorProduct(TensorProduct(U,X),V),Y),Z)) = " << (Dot(W, Dot(TensorProduct(TensorProduct(TensorProduct(U, Y), W), Z) + TensorProduct(TensorProduct(TensorProduct(U, X), V), Y), Z))) << std::endl;
   std::cout << w << std::array<std::array<double, 3>, 4>{{{1.397343170065950, 1.436425155629760, 0.965208250630457}, {0.582818143799632, 0.519169505889853, 0.168923818326160}, {0.850271155639995, 0.840064908162520, 0.487991627094851}, {1.314652320918430, 1.247463741211370, 0.604269215413879}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(W, Dot(TensorProduct(TensorProduct(TensorProduct(U, Y), W), Z) + TensorProduct(TensorProduct(TensorProduct(U, X), V), Y), Z))) - std::array<std::array<double, 3>, 4>{{{1.397343170065950, 1.436425155629760, 0.965208250630457}, {0.582818143799632, 0.519169505889853, 0.168923818326160}, {0.850271155639995, 0.840064908162520, 0.487991627094851}, {1.314652320918430, 1.247463741211370, 0.604269215413879}}}) << colorReset << std::endl;
   std::cout << w << "TensorProduct(U,X) = " << (TensorProduct(U, X)) << std::endl;
   std::cout << w << std::array<std::array<double, 4>, 3>{{{0.053421279012888, 0.158857613538689, 0.090566304144327, 0.227849310525687}, {0.088211890940575, 0.262313646162875, 0.149547616449673, 0.376236190940472}, {0.126292612778501, 0.375553402020164, 0.214106726597093, 0.538655855452784}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((TensorProduct(U, X)) - std::array<std::array<double, 4>, 3>{{{0.053421279012888, 0.158857613538689, 0.090566304144327, 0.227849310525687}, {0.088211890940575, 0.262313646162875, 0.149547616449673, 0.376236190940472}, {0.126292612778501, 0.375553402020164, 0.214106726597093, 0.538655855452784}}}) << colorReset << std::endl;
   std::cout << w << "TensorProduct(U,X)+TensorProduct(U,X) = " << (TensorProduct(U, X) + TensorProduct(U, X)) << std::endl;
   std::cout << w << std::array<std::array<double, 4>, 3>{{{0.106842558025776, 0.317715227077379, 0.181132608288653, 0.455698621051373}, {0.176423781881150, 0.524627292325750, 0.299095232899345, 0.752472381880944}, {0.252585225557001, 0.751106804040329, 0.428213453194185, 1.077311710905570}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((TensorProduct(U, X) + TensorProduct(U, X)) - std::array<std::array<double, 4>, 3>{{{0.106842558025776, 0.317715227077379, 0.181132608288653, 0.455698621051373}, {0.176423781881150, 0.524627292325750, 0.299095232899345, 0.752472381880944}, {0.252585225557001, 0.751106804040329, 0.428213453194185, 1.077311710905570}}}) << colorReset << std::endl;
   std::cout << w << "Dot(U,TensorProduct(U,X)) = " << (Dot(U, TensorProduct(U, X))) << std::endl;
   std::cout << w << std::array<double, 4>{{0.124758823866913, 0.370992409646542, 0.211506459519501, 0.532114028816381}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Dot(U, TensorProduct(U, X))) - std::array<double, 4>{{0.124758823866913, 0.370992409646542, 0.211506459519501, 0.532114028816381}}) << colorReset << std::endl;
   std::cout << w << "Norm(Dot(U,TensorProduct(U,X))) = " << (Norm(Dot(U, TensorProduct(U, X)))) << std::endl;
   std::cout << w << 0.693599635401920 << std::endl;
   std::cout << w << Red << "Error = " << Norm((Norm(Dot(U, TensorProduct(U, X)))) - 0.693599635401920) << colorReset << std::endl;
   std::cout << w << "Total(Dot(U,TensorProduct(U,X))) = " << (Total(Dot(U, TensorProduct(U, X)))) << std::endl;
   std::cout << w << 1.239371721849340 << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(Dot(U, TensorProduct(U, X)))) - 1.239371721849340) << colorReset << std::endl;
   std::cout << w << "Total(Dot(U,TensorProduct(U,X))+Dot(W,TensorProduct(V,Y))) = " << (Total(Dot(U, TensorProduct(U, X)) + Dot(W, TensorProduct(V, Y)))) << std::endl;
   std::cout << w << 2.930143032402790 << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(Dot(U, TensorProduct(U, X)) + Dot(W, TensorProduct(V, Y)))) - 2.930143032402790) << colorReset << std::endl;
   std::cout << w << "Norm(Dot(U,TensorProduct(U,X))+Dot(W,TensorProduct(V,Y))) = " << (Norm(Dot(U, TensorProduct(U, X)) + Dot(W, TensorProduct(V, Y)))) << std::endl;
   std::cout << w << 1.526659665778900 << std::endl;
   std::cout << w << Red << "Error = " << Norm((Norm(Dot(U, TensorProduct(U, X)) + Dot(W, TensorProduct(V, Y)))) - 1.526659665778900) << colorReset << std::endl;
   std::cout << w << "Total(TensorProduct(U,X)) = " << (Total(TensorProduct(U, X))) << std::endl;
   std::cout << w << std::array<double, 4>{{0.267925782731963, 0.796724661721729, 0.454220647191092, 1.142741356918940}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(TensorProduct(U, X))) - std::array<double, 4>{{0.267925782731963, 0.796724661721729, 0.454220647191092, 1.142741356918940}}) << colorReset << std::endl;
   std::cout << w << "Total(Total(TensorProduct(V,TensorProduct(U,X))+TensorProduct(W,TensorProduct(V,Y)))) = " << (Total(Total(TensorProduct(V, TensorProduct(U, X)) + TensorProduct(W, TensorProduct(V, Y))))) << std::endl;
   std::cout << w << std::array<double, 4>{{2.601278728660490, 1.336345916560360, 1.689718869841980, 2.774208163163310}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(Total(TensorProduct(V, TensorProduct(U, X)) + TensorProduct(W, TensorProduct(V, Y))))) - std::array<double, 4>{{2.601278728660490, 1.336345916560360, 1.689718869841980, 2.774208163163310}}) << colorReset << std::endl;
   std::cout << w << "Total(Total(TensorProduct(V,TensorProduct(U,X))-TensorProduct(W,TensorProduct(V,Y)))) = " << (Total(Total(TensorProduct(V, TensorProduct(U, X)) - TensorProduct(W, TensorProduct(V, Y))))) << std::endl;
   std::cout << w << std::array<double, 4>{{-1.862580350878280, 0.860304249585491, -0.437386780656976, 0.376444894460334}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(Total(TensorProduct(V, TensorProduct(U, X)) - TensorProduct(W, TensorProduct(V, Y))))) - std::array<double, 4>{{-1.862580350878280, 0.860304249585491, -0.437386780656976, 0.376444894460334}}) << colorReset << std::endl;
   std::cout << w << "Total(TensorProduct(V,TensorProduct(U,X))-TensorProduct(W,TensorProduct(V,Y))) = " << (Total(TensorProduct(V, TensorProduct(U, X)) - TensorProduct(W, TensorProduct(V, Y)))) << std::endl;
   std::cout << w << std::array<std::array<double, 4>, 3>{{{-1.044674351415550, 0.099731820185178, -0.408047685909889, -0.286603250567208}, {-0.821885910425147, 0.260995429022253, -0.243430506829242, 0.011864361622040}, {0.003979910962421, 0.499577000378061, 0.214091412082155, 0.651183783405502}}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(TensorProduct(V, TensorProduct(U, X)) - TensorProduct(W, TensorProduct(V, Y)))) - std::array<std::array<double, 4>, 3>{{{-1.044674351415550, 0.099731820185178, -0.408047685909889, -0.286603250567208}, {-0.821885910425147, 0.260995429022253, -0.243430506829242, 0.011864361622040}, {0.003979910962421, 0.499577000378061, 0.214091412082155, 0.651183783405502}}}) << colorReset << std::endl;
   std::cout << w << "Total(Total(TensorProduct(V,TensorProduct(U,X))*TensorProduct(W,TensorProduct(V,Y)))) = " << (Total(Total(TensorProduct(V, TensorProduct(U, X)) * TensorProduct(W, TensorProduct(V, Y))))) << std::endl;
   std::cout << w << std::array<double, 4>{{0.080997588286703, 0.025686227912809, 0.065433934803857, 0.185567258670108}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(Total(TensorProduct(V, TensorProduct(U, X)) * TensorProduct(W, TensorProduct(V, Y))))) - std::array<double, 4>{{0.080997588286703, 0.025686227912809, 0.065433934803857, 0.185567258670108}}) << colorReset << std::endl;
   std::cout << w << "Total(Total(TensorProduct(V,TensorProduct(U,X))/TensorProduct(W,TensorProduct(V,Y)))) = " << (Total(Total(TensorProduct(V, TensorProduct(U, X)) / TensorProduct(W, TensorProduct(V, Y))))) << std::endl;
   std::cout << w << std::array<double, 4>{{3.433453602265780, 95.739343203556700, 12.215323167287400, 27.262695497057600}} << std::endl;
   std::cout << w << Red << "Error = " << Norm((Total(Total(TensorProduct(V, TensorProduct(U, X)) / TensorProduct(W, TensorProduct(V, Y))))) - std::array<double, 4>{{3.433453602265780, 95.739343203556700, 12.215323167287400, 27.262695497057600}}) << colorReset << std::endl;
   /* -------------------------------------------------------------------------- */
   //! 手書きで，Solveのチェックを追加
   {
      std::array<double, 2> x;
      Solve(x, c, y);
      std::cout << w << "Solve[x,c,y] = " << std::setprecision(15) << x << std::endl;
      Solve(c, x, y);
      std::cout << w << "Solve[c,x,y] = " << std::setprecision(15) << x << std::endl;
   }
   {
      std::array<double, 3> x;
      Solve(x, b, U);
      std::cout << w << "Solve[x,b,U] = " << std::setprecision(15) << x << std::endl;

      Solve(b, x, U);
      std::cout << w << "Solve[b,x,U] = " << std::setprecision(15) << x << std::endl;
   }
}